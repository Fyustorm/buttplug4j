plugins {
    id 'java-library'
    id 'jacoco'
    id 'maven-publish'
}

group = 'org.blackspherefollower.buttplug'
version = "3.0." + ( "${System.env.GITHUB_RUN_NUMBER?:1}" ) + ( "${System.env.GITHUB_REF_TYPE}" == "tag" ? "" : "-SNAPSHOT" )

repositories {
    mavenCentral()
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

jacocoTestReport {
    reports {
        xml.enabled = true
        html.enabled = true
    }
}

task sourcesJar(type: Jar, dependsOn: classes) {
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
}

configurations {
    deployerJars
}

dependencies {
    api 'org.eclipse.jetty.websocket:websocket-client:9.4.50.v20221201'
    api 'org.eclipse.jetty.websocket:websocket-api:9.4.50.v20221201'
    api 'com.fasterxml.jackson.core:jackson-annotations:2.14.1'
    api 'com.fasterxml.jackson.core:jackson-databind:2.14.1'
    testImplementation 'org.junit.jupiter:junit-jupiter:5.9.1'
}

tasks.named('test') {
    useJUnitPlatform()
}

task codeCoverageReport(type: JacocoReport) {
    executionData fileTree(project.rootDir.absolutePath).include("**/build/jacoco/*.exec")

    subprojects.each {
        sourceSets it.sourceSets.main
    }

    reports {
        xml.enabled true
        xml.destination new File("${buildDir}/reports/jacoco/report.xml")
        html.enabled false
        csv.enabled false
    }
}

codeCoverageReport.dependsOn {
    subprojects*.test
}

publishing {
    repositories {
        maven {
            name = "GitHubPackages"
            url = uri("https://maven.pkg.github.com/${System.env.GITHUB_REPOSITORY_OWNER}/${System.env.GITHUB_REPOSITORY}")
            credentials {
                username = project.findProperty("gpr.user") ?: System.getenv("USERNAME")
                password = project.findProperty("gpr.key") ?: System.getenv("TOKEN")
            }
        }
    }
    publications {
        gpr(MavenPublication) {
            from(components.java)
        }
    }
}